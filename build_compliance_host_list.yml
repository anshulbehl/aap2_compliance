---
- name: capture hosts for all compliance policies
  hosts: all
  gather_facts: no
  tasks:

    - name: create standard policy host list
      template:
        src: templates/STD_host_file_template.j2
        dest: /tmp/std_compliance_hosts
      delegate_to: localhost


    - name: create hipaa policy host list
      template:
        src: templates/HIPAA_host_file_template.j2
        dest: /tmp/hipaa_compliance_hosts
      delegate_to: localhost


    - name: standard hosts
      ansible.builtin.debug:
        msg: "the value of standard is {{lookup('ansible.builtin.file', '/tmp/std_compliance_hosts') }}"


    - ansible.builtin.debug:
        msg: "the value of hippa is {{lookup('ansible.builtin.file', '/tmp/hipaa_compliance_hosts') }}"


- name: add host to compliance policies
  hosts: localhost
  gather_facts: no
  vars_files:
    - secrets_folder/tokens.yml
  tasks:
    - name: get access token
      uri:
        url: "https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token"
        method: POST
        return_content: True
        body_format: form-urlencoded
        headers:
    #          Content-Type: "application/json"
          accept: application/json
        body:
          grant_type: refresh_token
          client_id: rhsm-api
          refresh_token: "{{ offline_token }}"
    #        force_basic_auth: True
        validate_certs: False
      register: access_token_reponse

    - name: print access token
      set_fact:
        token: "{{ access_token_reponse.json.access_token }}"

    - ansible.builtin.debug:
        msg: "{{ token }}"


    - name: Get Compliance List-URI
      uri:
        url: https://console.redhat.com/api/compliance/profiles
        method: GET
        headers:
          Authorization: "Bearer {{ token }}"        
          Content-Type: "application/json"
          accept: application/json
        body_format: form-urlencoded
        status_code: 200
        return_content: yes
        validate_certs: false
        force_basic_auth: yes
      register: profiles

    - name: set profile list
      set_fact:
        profile_list: "{{ profiles.json }}"

    - debug:
        msg: "{{ profile_list }}"

#    - name: profile_id
#        set_fact:
#          profile_id: "{{ profile_list | json_query(get_profile_id) }}"
#        vars:
#          get_profile_id: "data[?attributes.name ==  '{{ profile_name }}'].id"

    - name: Get Host List
      uri:
        url: https://cloud.redhat.com/api/inventory/v1/hosts
        method: GET                                                                                                                                      
        headers:
          Content-Type: "application/json"
          accept: application/json
          Authorization: "Bearer {{ token }}"
        body_format: form-urlencoded
        status_code: 200
        validate_certs: false
        force_basic_auth: yes
        return_content: yes
      register: host_list

    - name: host_data fact
      set_fact:
        host_data: "{{ host_list.json }}"

    - debug:
        msg: "{{ host_data }}"
