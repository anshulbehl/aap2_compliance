---
- name: capture hosts for all compliance policies
  hosts: all
  gather_facts: no
  tasks:

    - name: create standard policy host list
      template:
        src: templates/STD_host_file_template.j2
        dest: /tmp/std_compliance_hosts
      delegate_to: localhost


    - name: create hipaa policy host list
      template:
        src: templates/HIPAA_host_file_template.j2
        dest: /tmp/hipaa_compliance_hosts
      delegate_to: localhost

    - name: create PCI policy host list
      template:
        src: templates/PCI_host_file_template.j2
        dest: /tmp/pci_compliance_hosts
      delegate_to: localhost

    - name: create DISA policy host list
      template:
        src: templates/DISA_host_file_template.j2
        dest: /tmp/stig_compliance_hosts
      delegate_to: localhost


#    - name: standard hosts
#      ansible.builtin.debug:
#        msg: "the value of standard is {{lookup('ansible.builtin.file', '/tmp/std_compliance_hosts') }}"


#    - ansible.builtin.debug:
#        msg: "the value of hippa is {{lookup('ansible.builtin.file', '/tmp/hipaa_compliance_hosts') }}"


- name: add host to compliance policies
  hosts: localhost
  gather_facts: no
  vars_files:
    - secrets_folder/tokens.yml
#  vars:
#    - compliance_type: 'label_compliance_type_hipaa'
  tasks:
    - set_fact:
        profile_name: 'Protection Profile for General Purpose Operating Systems'
        compliance_type: 'label_compliance_policy_std'
      when: compliance_type_multi == 'Standard'

    - set_fact:
        profile_name: 'Health Insurance Portability and Accountability Act (HIPAA)'
        compliance_type: 'label_compliance_policy_hipaa'
      when: compliance_type_multi == 'HIPAA'

    - set_fact:
        profile_name: 'PCI-DSS v3.2.1 Control Baseline for Red Hat Enterprise Linux 8'
        compliance_type: 'label_compliance_policy_pci'
      when: compliance_type_multi == 'PCI'      

    - set_fact:
        profile_name: 'DISA STIG with GUI for Red Hat Enterprise Linux 8'
        compliance_type: 'label_compliance_policy_disa_stig'
      when: compliance_type_multi == 'DISA_STIG'      

    - name: get access token
      uri:
        url: "https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token"
        method: POST
        return_content: True
        body_format: form-urlencoded
        headers:
    #          Content-Type: "application/json"
          accept: application/json
        body:
          grant_type: refresh_token
          client_id: rhsm-api
          refresh_token: "{{ offline_token }}"
    #        force_basic_auth: True
        validate_certs: False
      register: access_token_reponse

    - name: print access token
      set_fact:
        token: "{{ access_token_reponse.json.access_token }}"

    - ansible.builtin.debug:
        msg: "{{ token }}"


    - name: Get Compliance List-URI
      uri:
        url: https://console.redhat.com/api/compliance/profiles
        method: GET
        headers:
          Authorization: "Bearer {{ token }}"        
          Content-Type: "application/json"
          accept: application/json
        body_format: form-urlencoded
        status_code: 200
        return_content: yes
        validate_certs: false
        force_basic_auth: yes
      register: profiles

    - name: set profile list
      set_fact:
        profile_list: "{{ profiles.json }}"

    - name: profile_id
      set_fact:
        profile_id: "{{ profile_list | json_query(get_profile_id) }}"
      vars:
        get_profile_id: "data[?attributes.name ==  '{{ profile_name }}'].id"
    
    - name: Debug Profile ID
      debug:
        msg: "{{ profile_id}}"


    - name: Get Host List
      uri:
        url: https://cloud.redhat.com/api/inventory/v1/hosts?per_page=100&page=1
        method: GET                                                                                                                                      
        headers:
          Content-Type: "application/json"
          accept: application/json
          Authorization: "Bearer {{ token }}"
        body_format: form-urlencoded
        status_code: 200
        validate_certs: false
        force_basic_auth: yes
        return_content: yes
      register: host_list1

    - name: Get Host List
      uri:
        url: https://cloud.redhat.com/api/inventory/v1/hosts?per_page=100&page=2
        method: GET                                                                                                                                      
        headers:
          Content-Type: "application/json"
          accept: application/json
          Authorization: "Bearer {{ token }}"
        body_format: form-urlencoded
        status_code: 200
        validate_certs: false
        force_basic_auth: yes
        return_content: yes
      register: host_list2

    - set_fact:
        host_list: "{{ host_list2 | combine(host_list1) }}"


    - name: host_data fact
      set_fact:
        host_data: "{{ host_list.json }}"


    - name: set file content fact to hipaa
      set_fact:
        file_contents: "{{ item }}"
      with_file:
        - "/tmp/hipaa_compliance_hosts"
      delegate_to: localhost
      when: compliance_type == 'label_compliance_policy_hipaa'

    - name: set file content fact to std
      set_fact:
        file_contents: "{{ item }}"
      with_file:
        - "/tmp/std_compliance_hosts"
      delegate_to: localhost
      when: compliance_type == 'label_compliance_policy_std'


    - name: set file content fact to pci
      set_fact:
        file_contents: "{{ item }}"
      with_file:
        - "/tmp/pci_compliance_hosts"
      delegate_to: localhost
      when: compliance_type == 'label_compliance_policy_pci'

    - name: set file content fact to disa_stig
      set_fact:
        file_contents: "{{ item }}"
      with_file:
        - "/tmp/stig_compliance_hosts"
      delegate_to: localhost
      when: compliance_type == 'label_compliance_policy_disa_stig'

    - name: print file content fact
      debug:
        var: file_contents

    - name: get uuid of host
      set_fact:
        uuid: "{{ uuid + [ host_data | json_query(get_uuid)] }}"
      vars:
        uuid: []
        get_uuid: "results[?fqdn == '{{ item }}'].id"
#      loop: "{{ file_contents | split(',') }}"
      loop: "{{ file_contents | split('\n') }}"
#      loop: "{{ file_contents }}"
      delegate_to: localhost

    - name: print uuid
      debug:
        var: uuid

    - name: create lookup file
      template:
        src=templates/compliance_host.j2
        dest=compliance_host.json
        mode=0644
      delegate_to: localhost
    
    - name: lookup compliance host
      set_fact:
        json_file: "{{ lookup('file', 'compliance_host.json') }}"
    
    - name: print var
      debug:
        var=json_file

    - name: Update Compliance Host List
      uri:
        url: "https://console.redhat.com/api/compliance/profiles/{{ profile_id[0] }}"
        method: PATCH
#        method: GET
        headers:
          Authorization: "Bearer {{ token }}"
          Content-Type: "application/json"
          accept: application/json
        body_format: json
        body: "{{ lookup('file','compliance_host.json') }}"
        status_code: 200
        return_content: yes
        validate_certs: false
        force_basic_auth: yes
      register: new_profile
